---
# tasks file for backend-update
- name: Stop backend platform process
  shell: 'pm2 stop {{ TARGET_NAME }}'
  ignore_errors: yes

- set_fact:
    backup_filename: '/home/centos/backup/{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}.zip'

- name: Backup assets
  archive:
    path: '{{ backend_bin }}/data'
    dest: '{{ backup_filename }}'
    format: zip

- name: Delete backend dir
  file:
    path: '{{ backend_bin }}'
    state: absent

- name: Create backend dir
  file:
    path: '{{ backend_bin }}'
    state: directory
    recurse: yes

- name: Upload backend files
  synchronize:
    src: '{{ SRC_DIR }}'
    dest: '{{ backend_bin }}'
  register: copyfiles

- name: Unarchive assets
  unarchive:
    src: '{{ backup_filename }}'
    dest: '{{ backend_bin }}'
    remote_src: yes

- name: Install "typescript" node.js package globally.
  npm:
    name: typescript
    global: yes
  become: yes

- name: Install packages based on package.json
  npm:
    path: '{{ backend_bin }}'
    state: present

- name: Build code
  shell: npm run build
  args:
    chdir: '{{ backend_bin }}'

- name: Copy or generate env file
  template:
    src: ./{{ backend_env }}.j2
    dest: '{{ backend_bin }}/{{ backend_env }}'

- name: Copy or generate sequelize config file
  template:
    src: ./{{ sequelize_conf }}.j2
    dest: '{{ backend_bin }}/{{ sequelize_conf }}'

- name: Migrate database
  shell: npx sequelize-cli db:migrate
  args:
    chdir: '{{ backend_bin }}'

- name: Start backend process
  shell: 'pm2 start {{ TARGET_NAME }}'
  args:
    chdir: '{{ backend_bin }}'

- name: Saving current process list
  shell: pm2 save
  args:
    chdir: '{{ backend_bin }}'
